def Centroid(C_a, h_a, t_st, t_sp, t_sk, h_st, w_st, n_st):
    tab = []

    tab.append([0.0,0.0])

    #lengfront is the length of the circular part of the periphery of the airfoil
    lengfront = np.pi * h_a / 2
    #lengback is the length of the straight part of the periphery of the airfoil
    lengback = (2 * h_a**2 + 4 * C_a**2 - 4 * C_a * h_a)**(0.5)
    #lengperiph is the length of the periphery of the airfoil
    lengperiph = lengfront + lengback
    #stspace is the distance between two stiffeners along the skin
    stspace = lengperiph / (n_st)
    #n_frt is the number of stiffeners on the circular part of the aileron
    #(it is assumed there is a stiffener at the leading edge)
    n_frt, lenrem = divmod(lengfront/2, stspace)
    #angle is the angle between two stiffeners on the circular shape
    angle = stspace / lengfront * np.pi

    #we append the positions of the stiffeners on the circular section to the list of coordinates
    for i in range(0, int(n_frt)):
        theta_st=(i+1) * angle
        x = h_a/2 * (1 - cos(theta_st))
        y = h_a/2 * sin(theta_st)
        coord = [x,y]
        tab.append(coord)

    #phi is the angle at which a half of the trailing edge is inclined with respect to the chord line
    phi = atan((h_a/2) / (C_a - h_a/2))
    n_plate = int((n_st - 1 - 2*n_frt) / 2)
    s_first = stspace - lenrem

    #we append the positions of the stiffeners on the straight section to the list of coordinates
    for i in range(0, n_plate):
        dist = s_first + i * stspace
        x = h_a/2 + dist * cos(phi)
        y = h_a/2 - dist * sin(phi)
        coord = [x,y]
        tab.append(coord)

    xtab = []
    ytab = []

    for i in range(len(tab)):
        xtab.append(tab[i][0])
        ytab.append(tab[i][1])

    xtab = np.array(xtab)
    ytab = np.array(ytab)
    ytab2 = ytab * -1

    tab2 = []

    for i in range(0,len(xtab)):
        tab2.append([xtab[i],ytab2[i]])

    tab2 = tab2[1:]

    for i in range(len(tab2)):
        tab.append(tab2[i])

    A_st = (h_st + w_st - t_st) * t_st

    Sum_Ax = 0
    Sum_Ay = 0

    for i in range(len(tab)):
        Ax = A_st * tab[i][0]
        Ay = A_st * tab[i][1]
        Sum_Ax += Ax
        Sum_Ay += Ay

    xbar_st = Sum_Ax / (A_st * n_st)
    ybar_st = Sum_Ay / (A_st * n_st)

    dist_sk = lengperiph / 4 * cos(phi)

    pos_sk = C_a - dist_sk
    A_sk = t_sk * lengperiph

    pos_sp = h_a/2
    A_sp = h_a * t_sp

    #Centroid is the distance of the centroid wrt leading edge
    Centroid = (Sum_Ax + A_sk * pos_sk + A_sp * pos_sp)/(A_st * n_st + A_sk + A_sp)
    return Centroid
